<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" skinClass="skin.notebookBackground"
		xmlns:s="library://ns.adobe.com/flex/spark" fontFamily="宋体"
		initialize="initContent();">
	
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			
			private var initDBFlag:int = 0;
			private var checkSaveFlag:Boolean = true;
			private var dbConnection:SQLConnection = new SQLConnection;
			
			private function addTitle():void{
				if(notebookTitle.text == "未命名"){
					notebookTitle.text = "";
				}
			}
			
			private function checkTitle():void{
				if(notebookTitle.text == ""){
					notebookTitle.text = "未命名" ;
				}
			}
			
			private function backtoOverallView(event:MouseEvent):void
			{
				if(checkSaveFlag){
					updateDB();
				}
				navigator.popView();
			}
			
			private function initContent():void{
				try{
					if(data.title != ""){
						notebookTitle.text = data.title;
						
						if(initDBFlag != 1){
							initDB();
							initDBFlag ++;
						}
						
						var stmt:SQLStatement = new SQLStatement();
						stmt.sqlConnection = dbConnection;
						stmt.text = "SELECT content FROM notebookTable where rowid = (:rowid)";
						stmt.parameters[':rowid'] = data.selectedId;
						stmt.execute();
						var result:SQLResult = stmt.getResult(); 
						
						try{
							var row:Object = result.data[0];
							notebookContent.text = row.content;
						}catch(error:Error){
							Alert.show("无法读取内容")
						}
					}
				}catch(error:Error){
					notebookTitle.text = "未命名";
				}
			}
			
			private function initDB():void{
				var embededSessionDB:File = File.applicationDirectory.resolvePath("assets/notebookDatabase.sqlite");
				var writeSessionDB:File = File.applicationStorageDirectory.resolvePath("assets/notebookDatabase.sqlite");
				if (!writeSessionDB.exists) {
					embededSessionDB.copyTo(writeSessionDB);
				}
				var dbFile:File = writeSessionDB;
				dbConnection.open(dbFile);
			}
			
			private function updateDB():void{
				if(initDBFlag != 1){
					initDB();
					initDBFlag ++;
				}
				
				try{
					var seeIfNewContent:String = data.title;
					
					var stmt1:SQLStatement = new SQLStatement();
					stmt1.sqlConnection = dbConnection;
					stmt1.text = "UPDATE notebookTable SET title = (:title) WHERE rowid = (:rowid)";
					stmt1.parameters[':title'] = notebookTitle.text;
					stmt1.parameters[':rowid'] = data.selectedId;
					stmt1.execute();
					
					var stmt2:SQLStatement = new SQLStatement();
					stmt2.sqlConnection = dbConnection;
					stmt2.text = "UPDATE notebookTable SET content = (:content) WHERE rowid = (:rowid)";
					stmt2.parameters[':content'] = notebookContent.text;
					stmt2.parameters[':rowid'] = data.selectedId;
					stmt2.execute();
					
				}catch(error:Error){
					var stmt:SQLStatement = new SQLStatement();
					stmt.sqlConnection = dbConnection;
					stmt.text = "INSERT INTO notebookTable VALUES ((:title), (:content), (:showThis))";
					stmt.parameters[':title'] = notebookTitle.text;
					stmt.parameters[':content'] = notebookContent.text;
					stmt.parameters[':showThis'] = "true";
					stmt.execute();
					
					checkSaveFlag = false;
				}
			}
			
			private function deleteContent():void{
				if(initDBFlag != 1){
					initDB();
					initDBFlag ++;
				}
				
				try{
					var seeIfNewContent:String = data.title;
					
					var stmt1:SQLStatement = new SQLStatement();
					stmt1.sqlConnection = dbConnection;
					stmt1.text = "UPDATE notebookTable SET title = (:title) WHERE rowid = (:rowid)";
					stmt1.parameters[':title'] = notebookTitle.text;
					stmt1.parameters[':rowid'] = data.selectedId;
					stmt1.execute();
					
					var stmt2:SQLStatement = new SQLStatement();
					stmt2.sqlConnection = dbConnection;
					stmt2.text = "UPDATE notebookTable SET content = (:content) WHERE rowid = (:rowid)";
					stmt2.parameters[':content'] = notebookContent.text;
					stmt2.parameters[':rowid'] = data.selectedId;
					stmt2.execute();
					
					var stmt3:SQLStatement = new SQLStatement();
					stmt3.sqlConnection = dbConnection;
					stmt3.text = "UPDATE notebookTable SET showThis = (:false) WHERE rowid = (:rowid)";
					stmt3.parameters[':false'] = "false";
					stmt3.parameters[':rowid'] = data.selectedId;
					stmt3.execute();
					
					navigator.popView();
					
				}catch(error:Error){
					var stmt:SQLStatement = new SQLStatement();
					stmt.sqlConnection = dbConnection;
					stmt.text = "SELECT * FROM notebookTable WHERE title = (:title) AND  content = (:content)";
					stmt.parameters[':title'] = notebookTitle.text;
					stmt.parameters[':content'] = notebookContent.text;
					stmt.execute();
					var result:SQLResult = stmt.getResult(); 
					try{
						var row:Object = result.data[0];
						var stmt4:SQLStatement = new SQLStatement();
						stmt4.sqlConnection = dbConnection;
						stmt4.text = "UPDATE notebookTable SET showThis = (:false) WHERE title = (:title) AND  content = (:content)";
						stmt4.parameters[':false'] = "false";
						stmt4.parameters[':title'] = notebookTitle.text;
						stmt4.parameters[':content'] = notebookContent.text;
						stmt4.execute();
					}catch(error:Error){
						var stmt5:SQLStatement = new SQLStatement();
						stmt5.sqlConnection = dbConnection;
						stmt5.text = "INSERT INTO notebookTable VALUES ((:title), (:content), (:showThis))";
						stmt5.parameters[':showThis'] = "false";
						stmt5.parameters[':title'] = notebookTitle.text;
						stmt5.parameters[':content'] = notebookContent.text;
						stmt5.execute();
					}
					
					navigator.popView();
				}
			}
			
		]]>
	</fx:Script>
	
	<s:titleContent>
		<s:TextInput id="notebookTitle" paddingLeft="5" width="360" 
					 focusIn="addTitle();" focusOut="checkTitle()"/>
	</s:titleContent>
	
	<s:navigationContent>
		<s:Button label="返回" click="backtoOverallView(event)"/>
	</s:navigationContent>
	
	<s:actionContent>
		<s:Button label="保存" click="updateDB()"/>
	</s:actionContent>
	
	<s:TextArea id="notebookContent" width="100%" height="95%" bottom="50" top="20" autoCorrect="true" autoCapitalize="sentence"
				contentBackgroundAlpha="0" borderVisible="false"/> <!-- scrollRect-->
	<s:Button id="deleteBtn" width="100%" bottom="0" label="删除" skinClass="skin.deleteBtnSkin" click="deleteContent()" />
</s:View>
