<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="320" height="460"
		 xmlns:components="com.adobe.airbench.components.*"
		 title="地图查询系统">
	
	<fx:Metadata>
		[Event("LoginOk", type="flash.events.Event")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			//Flag makes sure that the database is initialized only once
			private var flag:uint = 0;
			
			protected function Login_clickHandler(event:MouseEvent):void
			{
				if(validateLogin()){
				dispatchEvent(new Event("LoginOk"));
				ErrorMsg.text = "";
				}
			}
			
			protected function validateLogin():Boolean
			{
				var validate:Boolean = true;
				if(flag != 1){
					initDB();
					flag ++;
				}
				
				if(Username.text == ""){
					ErrorMsg.text = "请输入用户名";
					validate = false;
				}
				else if(Password.text == ""){
					ErrorMsg.text = "请输入密码";
					validate = false
				}
				else{
					var stmt:SQLStatement = new SQLStatement();
					stmt.sqlConnection = dbConnection;
					stmt.text = "SELECT * FROM accounts WHERE username = (:username)";
					stmt.parameters[':username'] = Username.text;
					stmt.execute();
					var result:SQLResult = stmt.getResult(); 
					
					try{
						var row:Object = result.data[0]; 
						if(row.password == Password.text){
							validate = true;
						}
						else{
							validate = false;
							ErrorMsg.text = "密码错误";
						}
					}
					catch(error:Error){
						validate = false;
						ErrorMsg.text = "用户不存在";
					}
					
				}
				
				
				
				return validate;
			}
			
			private var dbConnection:SQLConnection = new SQLConnection;
			private function initDB():void{
				var embededSessionDB:File = File.applicationDirectory.resolvePath("assets/database.sqlite");
				var writeSessionDB:File = File.applicationStorageDirectory.resolvePath("assets/database.sqlite");
				// This process is fatal for android 
				if (!writeSessionDB.exists) {
					embededSessionDB.copyTo(writeSessionDB);
				}
				var dbFile:File = writeSessionDB;
				dbConnection.open(dbFile);
			}
			
//			private function onViewActivate():void
//			{
////				this.ml = ModelLocator.getInstance();
////				this.description.text = this.description.text.replace("$1", rows);
//				
//				var db:File = File.applicationStorageDirectory.resolvePath(SQL_FILE_NAME);
//				var conn:SQLConnection = new SQLConnection();
//				conn.open(db);
//				var d:Date = new Date();
//				
//				var startTime:Number = new Date().time;
//				
//				// Create a table
//				var stmt:SQLStatement = new SQLStatement();
//				stmt.sqlConnection = conn;
//				stmt.text = "CREATE TABLE IF NOT EXISTS accounts (id INTEGER PRIMARY KEY AUTOINCREMENT, first_name TEXT, last_name TEXT, account_created DATE, active BOOLEAN, last_order INTEGER);";
//				stmt.execute();
//				stmt = null;
//				
//				// Insert some rows
//				stmt = new SQLStatement();
//				stmt.sqlConnection = conn;
//				conn.begin();
//				stmt.text = "INSERT INTO accounts (first_name, last_name, account_created, active, last_order) VALUES (:first_name, :last_name, :account_created, :active, :last_order);";
//				for (var i:uint = 0; i < rows; ++i)
//				{
//					stmt.parameters[":first_name"]      = "Christian";
//					stmt.parameters[":last_name"]       = "Cantrell";
//					stmt.parameters[":account_created"] = d;
//					stmt.parameters[":active"]          = true;
//					stmt.parameters[":last_order"]      = i;
//					stmt.execute();
//				}
//				conn.commit();
//				stmt = null;
//				d = null;
//				
//				// Select some rows
//				stmt = new SQLStatement();
//				stmt.sqlConnection = conn;
//				stmt.text = "SELECT * FROM accounts";
//				stmt.execute();
//				var result:SQLResult = stmt.getResult();
//				stmt = null;
//				
//				// Delete some rows
//				stmt = new SQLStatement();
//				stmt.sqlConnection = conn;
//				stmt.text = "DELETE FROM accounts WHERE first_name = :first_name AND last_name = :last_name;";
//				stmt.parameters[":first_name"] = "Christian";
//				stmt.parameters[":last_name"] = "Cantrell";
//				stmt.execute();
//				stmt = null;
//				conn.close();
//				
//				var totalTime:Number = new Date().time - startTime;
//				
//				db = File.applicationStorageDirectory.resolvePath(SQL_FILE_NAME);
//				db.deleteFile();
//				db = null;
//				
//				this.output.text = "Total time: " + String(totalTime) + " ms";
//				this.ml.testManager.reportPerformanceTestResults(SQL, totalTime, "SQL operations took " + String(totalTime) + " ms.");
//				this.navBar.testComplete(true, "Test Complete");
//			}
//			
//			private function onViewDeactivate():void
//			{
//			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:Button id="Login" x="81" y="300" width="157" height="35" label="登陆"
			  click="Login_clickHandler(event)"/>
	<s:Label x="10" y="147" text="用户名"/>
	<s:Label x="10" y="226" text="密码"/>
	<s:TextInput id="Username" x="10" y="171" width="300"/>
	<s:TextInput id="Password" x="10" y="254" width="300" displayAsPassword="true"/>
	<s:Label id="ErrorMsg" x="115" y="107" width="96" height="20" text="" color="red"/>
</s:Panel>